name: Build Chromium Portable

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Setup
        run: mkdir Chromium_Portable

      - name: Download 7zr
        run: curl -L https://www.7-zip.org/a/7zr.exe -o 7zr.exe

      - name: Download Chromium
        id: chromium
        run: |
          $latest = Invoke-RestMethod https://api.github.com/repos/Hibbiki/chromium-win64/releases/latest
          curl -L $latest.assets[0].browser_download_url -o chrome.7z

      - name: Extract Chromium
        run: |
          .\7zr.exe x chrome.7z
          Move-Item Chrome-bin Chromium
          Move-Item Chromium .\Chromium_Portable\

      - name: Get Chromium Version
        id: chrome_version
        run: |
          $ver = (Get-Item "Chromium_Portable\Chromium\chrome.exe").VersionInfo.ProductVersion
          echo "version=$ver" >> $env:GITHUB_OUTPUT

      - name: Download chrome_plus
        id: chrome_plus
        run: |
          $latest = Invoke-RestMethod https://api.github.com/repos/Bush2021/chrome_plus/releases/latest
          $asset = $latest.assets | Where-Object { $_.name -like "Chrome*x86_x64_arm64.7z" }
          curl -L $asset.browser_download_url -o chrome_plus.7z
          echo "version=$($latest.tag_name)" >> $env:GITHUB_OUTPUT

      - name: Extract chrome_plus
        run: |
          .\7zr.exe x chrome_plus.7z
          Copy-Item -Recurse "Chrome*\x64\App\version.dll" "Chromium_Portable\Chromium\"

      - name: Copy project files
        run: |
          Copy-Item chrome++.ini debloater.reg default-apps-multi-profile.bat -Destination "Chromium_Portable\Chromium\"
          $ver = "${{ steps.chrome_version.outputs.version }}"
          $dest = "Chromium_Portable\Chromium\Chrome\$ver\WidevineCdm"
          New-Item -ItemType Directory -Force -Path $dest
          Copy-Item -Recurse WidevineCdm\* -Destination $dest

      - name: Set archive filename
        id: filenames
        run: |
          $fn = "chromium-portable-x64_${{ steps.chrome_version.outputs.version }}_${{ steps.chrome_plus.outputs.version }}.zip"
          echo "filename=$fn" >> $env:GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        run: |
          $tag = "${{ steps.filenames.outputs.filename }}"
          $tag = $tag -replace '\.zip$', ''
          if (gh release view $tag 2>$null) { echo "exists=true" >> $env:GITHUB_OUTPUT } else { echo "exists=false" >> $env:GITHUB_OUTPUT }

      - name: Create release
        if: steps.check_release.outputs.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $fn = "${{ steps.filenames.outputs.filename }}"
          Compress-Archive -Path "Chromium_Portable" -DestinationPath $fn
          $tag = $fn -replace '\.zip$', ''
          gh release create $tag $fn --title $tag

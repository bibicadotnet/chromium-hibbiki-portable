name: Build Chromium Portable

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Check versions and release
      id: check
      run: |
        $chromium = Invoke-RestMethod "https://api.github.com/repos/bibicadotnet/chromium-hibbiki/releases/latest"
        $chromium_ver = $chromium.tag_name -replace '^v','' -replace '-r\d+$',''
        
        $plus = Invoke-RestMethod "https://api.github.com/repos/bibicadotnet/Chromium_SetDLL/releases/latest"
        $plus_ver = $plus.tag_name -replace '^v',''
        $plus_url = ($plus.assets | Where-Object { $_.name -like "Chrome*.7z" }).browser_download_url
        
        $tag = "chromium-portable-x64_${chromium_ver}_${plus_ver}"
        
        echo "CHROMIUM_VER=$chromium_ver" >> $env:GITHUB_ENV
        echo "CHROMIUM_URL=$($chromium.assets[0].browser_download_url)" >> $env:GITHUB_ENV
        echo "PLUS_VER=$plus_ver" >> $env:GITHUB_ENV
        echo "PLUS_URL=$plus_url" >> $env:GITHUB_ENV
        echo "TAG=$tag" >> $env:GITHUB_ENV
        
        try {
          Invoke-RestMethod "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag" -Headers @{Authorization="Bearer $env:GITHUB_TOKEN"}
          echo "EXISTS=true" >> $env:GITHUB_ENV
        } catch {
          echo "EXISTS=false" >> $env:GITHUB_ENV
        }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v4
      if: env.EXISTS == 'false'

    - name: Build
      if: env.EXISTS == 'false'
      run: |
        curl -sSL "${{ env.CHROMIUM_URL }}" -o chrome.7z
        curl -sSL "${{ env.PLUS_URL }}" -o chrome_plus.7z
        curl -sSL https://www.7-zip.org/a/7zr.exe -o 7zr.exe
        
        ./7zr.exe x chrome.7z
        ./7zr.exe x chrome_plus.7z
        
        New-Item -Force -Type Directory Chromium_Portable | Out-Null
        Rename-Item Chrome-bin Chromium
        Move-Item Chromium Chromium_Portable/
        
        $dll = Get-ChildItem -Recurse version.dll | Where-Object { $_.FullName -match '\\x64\\App\\' }
        Copy-Item $dll[0].FullName Chromium_Portable/Chromium/ -Force
        
        Copy-Item chrome++.ini,debloater.reg,default-apps-multi-profile.bat,update.bat Chromium_Portable/Chromium/ -Force
        
        New-Item -Force -Type Directory "Chromium_Portable/Chromium/${{ env.CHROMIUM_VER }}" | Out-Null
        Copy-Item WidevineCdm "Chromium_Portable/Chromium/${{ env.CHROMIUM_VER }}/" -Recurse -Force
        
        Compress-Archive Chromium_Portable "${{ env.TAG }}.zip" -Force
        echo "ZIP=${{ env.TAG }}.zip" >> $env:GITHUB_ENV

    - name: Release
      if: env.EXISTS == 'false'
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.ZIP }}
        tag_name: ${{ env.TAG }}
        name: ${{ env.CHROMIUM_VER }}_${{ env.PLUS_VER }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

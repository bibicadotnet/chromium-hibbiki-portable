name: Build Chromium Portable

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Get latest versions
      run: |
        # Lấy thông tin Chromium
        $chromium_release = Invoke-RestMethod "https://api.github.com/repos/Hibbiki/chromium-win64/releases/latest"
        $chromium_url = $chromium_release.assets[0].browser_download_url
        echo "CHROMIUM_URL=$chromium_url" >> $env:GITHUB_ENV

        # Tách version từ tag_name (ví dụ: v140.0.7339.81-r1496484 -> 140.0.7339.81)
        $chromium_tag = $chromium_release.tag_name
        $chromium_ver = $chromium_tag -replace '^v','' -replace '-r\d+$',''
        echo "CHROMIUM_VER=$chromium_ver" >> $env:GITHUB_ENV

        # Lấy version chrome_plus (bỏ prefix v nếu có)
        $plus_release = Invoke-RestMethod "https://api.github.com/repos/Bush2021/chrome_plus/releases/latest"
        $plus_ver = $plus_release.tag_name -replace '^v',''
        $plus_url = $plus_release.assets[0].browser_download_url
        echo "PLUS_VER=$plus_ver" >> $env:GITHUB_ENV
        echo "PLUS_URL=$plus_url" >> $env:GITHUB_ENV

    - name: Check if release exists
      id: check
      run: |
        $tag_name = "chromium-portable-x64_${{ env.CHROMIUM_VER }}_${{ env.PLUS_VER }}"
        echo "REL=$tag_name" >> $env:GITHUB_ENV
        $url = "https://api.github.com/repos/${{ github.repository }}/releases/tags/$tag_name"

        try {
          $r = Invoke-RestMethod -Uri $url -Headers @{Authorization="Bearer $env:GITHUB_TOKEN"}
          echo "RELEASE_EXISTS=true" >> $env:GITHUB_ENV
          Write-Output "Release $tag_name already exists, skipping build"
        } catch {
          if ($_.Exception.Response.StatusCode.Value__ -eq 404) {
            echo "RELEASE_EXISTS=false" >> $env:GITHUB_ENV
            Write-Output "ℹRelease $tag_name does not exist yet"
          } else {
            throw $_
          }
        }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Chromium Portable
      if: env.RELEASE_EXISTS == 'false'
      run: |
        # Tạo thư mục gốc
        New-Item -ItemType Directory -Force -Path Chromium_Portable | Out-Null

        # Tải Chromium và 7zr
        curl -sSL "${{ env.CHROMIUM_URL }}" -o chrome.7z
        curl -sSL https://www.7-zip.org/a/7zr.exe -o 7zr.exe

        # Giải nén Chromium
        ./7zr.exe x chrome.7z
        Rename-Item -Force Chrome-bin Chromium
        Move-Item -Force Chromium Chromium_Portable/

        # Tải và giải nén chrome_plus
        curl -sSL "${{ env.PLUS_URL }}" -o chrome_plus.7z
        ./7zr.exe x chrome_plus.7z

        # Copy version.dll
        $dll = Get-ChildItem -Recurse -Filter "version.dll" | Select-Object -First 1
        if ($dll) { Copy-Item -Force $dll.FullName Chromium_Portable/Chromium/ }

        # Copy config files
        Copy-Item -Force chrome++.ini Chromium_Portable/Chromium/
        Copy-Item -Force debloater.reg Chromium_Portable/Chromium/
        Copy-Item -Force default-apps-multi-profile.bat Chromium_Portable/Chromium/

        # Copy WidevineCdm vào thư mục theo version
        New-Item -ItemType Directory -Force -Path "Chromium_Portable/Chromium/${{ env.CHROMIUM_VER }}" | Out-Null
        Copy-Item -Recurse -Force WidevineCdm "Chromium_Portable/Chromium/${{ env.CHROMIUM_VER }}/"

        # Nén thành zip
        $zip_name = "chromium-portable-x64_${{ env.CHROMIUM_VER }}_${{ env.PLUS_VER }}.zip"
        Compress-Archive -Path Chromium_Portable -DestinationPath $zip_name
        echo "ZIP_NAME=$zip_name" >> $env:GITHUB_ENV

    - name: Create Release
      if: env.RELEASE_EXISTS == 'false'
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.ZIP_NAME }}
        tag_name: chromium-portable-x64_${{ env.CHROMIUM_VER }}_${{ env.PLUS_VER }}
        name: chromium-portable-x64_${{ env.CHROMIUM_VER }}_${{ env.PLUS_VER }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

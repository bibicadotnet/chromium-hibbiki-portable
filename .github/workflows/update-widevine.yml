name: Update WidevineCdm

on:
  schedule:
    - cron: '0 * * * *'  # Chạy mỗi giờ
  workflow_dispatch:  # Cho phép chạy thủ công

jobs:
  update-widevine:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Get latest release
      id: get-release
      run: |
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/bibicadotnet/microsoft-edge-multi-portable/releases | \
          jq -r '[.[] | select(.tag_name | contains("edge-canary-portable-x64"))] | .[0].tag_name')
        
        DOWNLOAD_URL="https://github.com/bibicadotnet/microsoft-edge-multi-portable/releases/download/${LATEST_RELEASE}/${LATEST_RELEASE}.zip"
        
        echo "release_tag=${LATEST_RELEASE}" >> $GITHUB_OUTPUT
        echo "download_url=${DOWNLOAD_URL}" >> $GITHUB_OUTPUT
        echo "Latest release: ${LATEST_RELEASE}"
        
    - name: Download and extract
      run: |
        wget -O release.zip "${{ steps.get-release.outputs.download_url }}"
        unzip -q release.zip
        
        # Tìm thư mục WidevineCdm
        WIDEVINE_PATH=$(find . -name "WidevineCdm" -type d | head -1)
        echo "Found WidevineCdm at: ${WIDEVINE_PATH}"
        
        # Đọc version mới
        NEW_VERSION=$(jq -r '.version' "${WIDEVINE_PATH}/manifest.json")
        echo "New version: ${NEW_VERSION}"
        
        # Đọc version hiện tại (nếu có)
        if [ -f "WidevineCdm/manifest.json" ]; then
          CURRENT_VERSION=$(jq -r '.version' "WidevineCdm/manifest.json")
          echo "Current version: ${CURRENT_VERSION}"
        else
          CURRENT_VERSION=""
          echo "No current version found"
        fi
        
        echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
        echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
        echo "WIDEVINE_PATH=${WIDEVINE_PATH}" >> $GITHUB_ENV
        
    - name: Update WidevineCdm if newer
      run: |
        if [ "$NEW_VERSION" != "$CURRENT_VERSION" ]; then
          echo "Updating WidevineCdm from $CURRENT_VERSION to $NEW_VERSION"
          
          # Xóa thư mục cũ nếu có
          rm -rf WidevineCdm
          
          # Copy thư mục mới
          cp -r "$WIDEVINE_PATH" WidevineCdm
          
          echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
        else
          echo "WidevineCdm is already up to date (version: $CURRENT_VERSION)"
          echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
        fi
        
    - name: Commit changes
      if: env.UPDATE_NEEDED == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add WidevineCdm/
        git commit -m "Update WidevineCdm to version $NEW_VERSION"
        git push
